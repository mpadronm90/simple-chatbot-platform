name: Deploy on Merge

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci && cd functions && npm ci

      # Step 4: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 5: Authenticate using gcloud with the service account
      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v2.1.1
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      # Step 6: Set Firebase Functions Config (now authenticated with gcloud)
      - name: Set Firebase Functions Config
        run: |
          firebase functions:config:set openai.apikey="${{ secrets.OPENAI_API_KEY }}" --project ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}

      # Step 7: Build the project
      - name: Build
        run: npm run build && npm run build:functions
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ vars.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          NEXT_PUBLIC_FUNCTIONS_API_URL: ${{ vars.NEXT_PUBLIC_FUNCTIONS_API_URL }}

      # Step 8: Deploy to Firebase
      - name: Deploy to Firebase
        run: firebase deploy --only hosting,functions --project ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "${{ github.workspace }}/firebase-service-account.json"
