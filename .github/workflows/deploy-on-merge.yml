name: Deploy on Merge

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci && cd functions && npm ci
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Authenticate with Firebase
        run: |
            echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > "${{ github.workspace }}/firebase-service-account.json"
            export GOOGLE_APPLICATION_CREDENTIALS="${{ github.workspace }}/firebase-service-account.json"
      - name: Build
        run: npm run build && npm run build:functions
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ vars.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
          NEXT_PUBLIC_FUNCTIONS_API_URL: ${{ vars.NEXT_PUBLIC_FUNCTIONS_API_URL }}
      - name: Set Firebase Functions Config
        run: |
          firebase functions:config:set openai.apikey="$OPENAI_API_KEY" --project ${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - name: Deploy to Firebase
        run: firebase deploy --only hosting,functions --project ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
